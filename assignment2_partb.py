# -*- coding: utf-8 -*-
"""assignment2_partB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oQOPZ1uO8JJqDWtKQVG50Cd15fZMOaYW
"""

# Connecting to google drive
from google.colab import drive
drive.mount('/content/drive')

# Wandb 
!pip install wandb --upgrade

import tensorflow as tf
import numpy as np

from tensorflow.keras.applications.resnet50 import ResNet50
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.resnet50 import preprocess_input, decode_predictions

# Commented out IPython magic to ensure Python compatibility.
# GPU test

# %tensorflow_version 2.x
import tensorflow as tf
import timeit

# We run this to warm up; see: https://stackoverflow.com/a/45067900
device_name = tf.test.gpu_device_name()
if device_name != '/device:GPU:0':
  print(
      '\n\nThis error states that this notebook is not '
      'configured to use a GPU. Change this in the notebook Settings via the Runtime type or  '
      'command palette (cmd/ctrl-shift-P) or the Edit menu .\n\n')
  raise SystemError('GPU device not found')

def cpu():
  with tf.device('/cpu:0'):
    random_image_cpu = tf.random.normal((100, 100, 100, 3))
    net_cpu = tf.keras.layers.Conv2D(32, 7)(random_image_cpu)
    return tf.math.reduce_sum(net_cpu)

def gpu():
  with tf.device('/device:GPU:0'):
    random_image_gpu = tf.random.normal((100, 100, 100, 3))
    net_gpu = tf.keras.layers.Conv2D(32, 7)(random_image_gpu)
    return tf.math.reduce_sum(net_gpu)

cpu()
gpu()

# Run the op several times.
print('Time (s) to convolve 32x7x7x3 filter over random 100x100x100x3 images '
      '(batch x height x width x channel). Sum of ten runs.')
print('CPU (s):')
cpu_time = timeit.timeit('cpu()', number=10, setup="from __main__ import cpu")
print(cpu_time)
print('GPU (s):')
gpu_time = timeit.timeit('gpu()', number=10, setup="from __main__ import gpu")
print(gpu_time)
print('GPU speedup over CPU: {}x'.format(int(cpu_time/gpu_time)))



# train and test directory locations

train_dir = "/content/drive/MyDrive/inaturalist_12K/train"
val_dir = "/content/drive/MyDrive/inaturalist_12K/val"

modelName = "VGG19"

if(modelName == "VGG19"):
  base_model = tf.keras.applications.VGG19(
      weights = 'imagenet', # loading the weights, pre trained on ImageNet
      input_shape = (256,256,3),
      include_top = False,
  )

s= tf.keras.applications

